name: gogsgit
summary:  GOGS - A painless self-hosted Git service
#contact: https://github.com/tbraeutigam/gogs-snap/issues
description: |
  The goal of this project is to make the easiest, fastest, and most painless
  way of setting up a self-hosted Git service. With Go, this can be done with
  an independent binary distribution across ALL platforms that Go supports,
  including Linux, Mac OS X, Windows and ARM.

type: app
icon: snap/gogs.svg
confinement: strict
grade: stable

version: 'script'
version-script: |
  echo "$(cat stage/static/templates/.VERSION)+snap-$(git reflog | head -n1 | cut -d' ' -f1)"

apps:
  gogsgit:
    command: bin/run
    daemon: simple
    plugs: [network, network-bind]
  web:
    command: bin/run direct web
    plugs: [network, network-bind]
  hook:
    command: bin/run direct hook
    plugs: [network, network-bind]
  cert:
    command: bin/run direct cert
#  admin:
#    command: bin/run direct admin
  import:
    command: bin/run direct import
  backup:
    command: bin/run direct backup
  restore:
    command: bin/run direct restore
  help:
    command: bin/run help

parts:
  go:
    source-tag: go1.8.3
    prime:
      - -*

  gogs:
    plugin: nil
    source: https://github.com/gogits/gogs
    source-type: git
    source-tag: v0.11.29
    after: [ go ]
    stage-packages: [ git, sqlite3, openssh-client ]
    build-packages: [ libpam0g-dev, libsqlite3-dev]
    organize:
      LICENSE: LICENSE-gogs
      README.md: README-gogs.md
    prepare: |
      export PATH=$SNAPCRAFT_PART_INSTAL/../../go/install/bin:$PATH
      export GOPATH=$SNAPCRAFT_PART_INSTALL/../go
      export bld=$SNAPCRAFT_PART_INSTALL/../build
      export src=$SNAPCRAFT_PART_INSTALL/../src
      mkdir -p $GOPATH; cd $bld;
      cp -r $src/* $bld/
      ###
      # Ad-Hoc patch of cert function to enable adding an output directory
      ##
      if grep -q "Directory to which the certificate" $src/cmd/cert.go; then
        echo "Already Patched."
      else
        sed -i '/cli.Flag/a stringFlag("out, o", "./", "Directory to which the certificate should be written"),' cmd/cert.go
        sed -i 's_"cert.pem"_ctx.String("out") + "cert.pem"_g' cmd/cert.go
        sed -i 's_"key.pem"_ctx.String("out") + "key.pem"_g' cmd/cert.go
        git add .
        git commit -m "Committing cert command output dir patch"
      fi
      mkdir -p $GOPATH/src/github.com/gogits/gogs
      cp -r $bld/* $GOPATH/src/github.com/gogits/gogs/
    build: |
      export PATH=$SNAPCRAFT_PART_INSTAL/../../go/install/bin:$PATH
      export GOPATH=$SNAPCRAFT_PART_INSTALL/../go
      cd $GOPATH/src/github.com/gogits/gogs
      go build -v -tags "sqlite pam cert"
    install: |
      ###
      # Set Convenience Variables
      ##
      src=$SNAPCRAFT_PART_INSTALL/../go/src/github.com/gogits/gogs
      ###
      # Copy build artifact and necessary files
      ##
      mkdir -p $SNAPCRAFT_PART_INSTALL/bin
      mkdir -p $SNAPCRAFT_PART_INSTALL/static
      cp    $SNAPCRAFT_PART_INSTALL/../go/src/github.com/gogits/gogs/gogs \
            $SNAPCRAFT_PART_INSTALL/bin/
      cp -r $src/LICENSE \
            $src/templates \
            $src/public \
            $src/scripts \
            $SNAPCRAFT_PART_INSTALL/static/
      cp    $src/README.md \
            $SNAPCRAFT_PART_INSTALL/README-gogs.md
    prime:
      - -etc
      - -usr/lib/systemd
      - -usr/lib/gcc
      - -usr/lib/sasl2
      - -usr/lib/x86_64-linux-gnu/krb5
      - -usr/share/apport
      - -usr/share/bash-completion
      - -usr/share/doc
      - -usr/share/git-core/contrib
      - -usr/share/man
      - -usr/share/upstart
      - -var


  helpers:
    plugin: dump
    source: snap/helpers
    organize:
      launcher.sh: bin/run
      directorySetup.sh: bin/directorySetup.sh

  readme:
    plugin: dump
    source: ./
    organize:
      LICENSE: LICENSE-snap
